Author: Kolja Kauder <kkauder@gmail.com>
Date:   Fri Sep 24 11:45:06 2021 -0400
	HepMC3 conversion works for BeAGLE
	HepMC2 is also an option
	Initialize orig1 in ctor
	declared version 1.1.8

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Aug 17 14:02:57 2021 -0400
	Added a ROOT tree to HepMC3 converter.
	Declared version 1.1.7

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jun 22 12:19:14 2021 -0400
	Added Sartre methods for scattered lepton and exchange boson
	Declared version 1.1.6

Author: Wenliang (Bill) Li <wenliang.billlee@gmail.com>
Date:   Mon May 21 17:27:00 2021 -0400
    Implemented DEMP Event Reader. Simple Event Reader with weight tracked

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jun 15 14:39:47 2021 -0400
	Reworked CMakeList.txt to fix rootmap creation
	Declared version 1.1.5

Date:   Tue Apr 20 12:14:55 2021 -0400
	Implemented workaround for root bug
	https://github.com/root-project/root/issues/8250
	Changed to default cmake macros
	Updated minimum ROOT version to 6.18
	Declared version 1.1.4

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Apr 20 12:14:55 2021 -0400
	Improved lepton calculations for x and Q^2
	Declared version 1.1.3

Author: kkauder <kkauder@gmail.com>
Date:   Wed Oct 8
    - Removed faulty genre check to support smearing muons.
    - isnan --> std::isnan
    - Added getters to EventRapgap
    - Fixed rapgap event lepton and boson determination
    - Declared version 1.1.2

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Aug 19 12:15:11 2020 -0400
    - Bugfix in Kinematics.cxx for the case of smeared E < mass
    - Added experimental PID support
    - Bugfix for gzipped HepMC2 and HepMC3 input
    - Declared version 1.1.1

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Jul 30 15:27:56 2020 +0000
	Exchange boson fixes
	Declared v 1.1.0

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Jul 30 11:14:44 2020 -0400
	- Revamped HepMC reader to correctly identify the scattered
	lepton and treat a missing gamma* gracefully
	- In BuildTree, allow pseudo-exchange boson with
	pid=status=P=vertex=0
	- Changed extended kinematics calculations to use e'-e instead of
	relying on the existence of a gamma* entry.
	- Also, in Get4VectorInHadronBosonFrame ptVsGamma and theta now
	calculated in Hadron Rest Frame
	- declared v 1.1.0-rc2

Author: Chris Pinkenburg
Date:   Wed Jul 29 10:42:46 2020 -0400
    Merge pull request #5 from pinkenburg/hepmc-3
    read hepmc2 and hepmc3 formatted files

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Fri Jul 24 13:26:17 2020 -0400
	Added eic-smear ROOT wrapper to automatically load libraries
	and display version information.
	Declared version 1.1.0-rc1

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Jul 23 08:12:14 2020 -0400
    Added gzip support to BuildTree and Forester.
    removed deprecated leftovers.
    Removed all tests and smearing scripts - now in their own repo.

Author:  Dmitriy Kim <Dmitriy.Kim@stonybrook.edu>, Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jul 21 17:40:17 2020 -0400
	Implemented Pt and Pz smearing
	Changed Detector.cxx momentum calculations
	Added JLEIC
	Now saving various smear statuses as booleans in the output tree
	changed particleMC initialization to physically consistent and
	compatible with unsigned short values
	Find scattered final electron in EventSimple

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Jul 9 16:15:45 2020 -0400
    Added HepMC2 support to BuildTree

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Mon Jul 6 11:57:10 2020 -0400
	Revamped cmake setup to more modern guidelines
	https://pabloariasal.github.io/2018/02/19/its-time-to-do-cmake-right/
	https://www.youtube.com/watch?v=rLopVhns4Zs&feature=youtu.be
	Some important changes:
	- root dictionary generation moved to its own macro. In the
	future, FindROOT should be completely eliminated but for
	root < 6.20, it still neds to be around
	- Enforce cmake >= 3.10 and Root >= 6.10
	- ROOT_INCLUDE_PATH is no longer needed -- frustratingly, unless
	ROOT >= 6.20...
	- Version 1.0.4 specified in CMakeLists.txt
	- explicit C++11 is enforced via
	target_compile_features(eicsmear PUBLIC cxx_std_11)
	c++17 interplay needs to be tested further.
	- using $<INSTALL_INTERFACE:include> and  $<BUILD_INTERFACE:, but
	for now it's unclear what that does.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Mon Apr 20 07:15:27 2020 -0400
    Updated documentation.
    Restructured qaplots for better readability; added keeping track of misses
    Added details from calo DWG to handbook detector
    Added eta-dependent QA plots and profiles
    Renamed test file and added one with higher Q^2
    Added perfect detector.
    Catching a few unphysical cases in Kinematic.cxx. Leaving in others because they serve as canaraies to indicates issues with a detector implementation.


Author: Barak Schmookler <bschmookler1@gmail.com>
Date:   Wed Apr 8 11:18:50 2020 -0400
    Implemented Simple Event Reader

Author: Barak Schmookler <bschmookler1@gmail.com>
Date:   Wed Apr 8 19:00:06 2020 -0400
	Add ability to read-in Sartre Event Generator.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Sat Apr 4 10:38:09 2020 -0400
    Renamed and restructure existing tests.
    Added qaplot maker in tests directory.

Author: kkauder <kkauder@gmail.com>
Date:   Sat Apr 4 13:52:23 2020 +0000
	Fixes for unphysical y_JB and x_JB, see issue #10

Author: kkauder <kkauder@gmail.com>
Date:   Tue Mar 17 13:51:48 2020 +0000
	Range bugfix
	After smearing, the smeared observable gets funneled through a TF1
	using GetX(). This TF1 has a range 0.0-1.0e16. The result is that
	smeared values less than 0 get transformed int nan, which also
	silently prevents the existing mechanisms that check for
	reasonableness. In some cases of the supported smearable
	properties (E, pT, theta), negative values are unlikely to be
	produced or noticed. In the case of phi, values near 0 never get
	smeared to values close to 2pi, although the inverse happens,
	showing that the wrapping works	unless a nan is generated by this
	bug. pZ should also be affected by this.
	This fix is the bare minimum - extending the TF1 range. In a
	future patch, expect a more thorough rewrite because the
	TF1::GetX() mechanism does not seem to serve a purpose. 


Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Mar 12 18:07:41 2020 -0400
	auto_ptr, ptr_fun, mem_fun, bind2nd, ...
	All of which are deleted in C++17. Changing to simpler
	structures compatible back and forward.
	Remaining uses of auto_ptr have been replaced by unique_ptr, which
	means the package now requires C++11. 

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Sun Mar 8 17:49:38 2020 -0400
    Started work on support for pythia6 builder skipping lund output

commit 6c80f1ef7cb49480dbd587841a8b6407913cd986
Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Mar 5 14:01:24 2020 -0500
	Made C++98 compliant for the last time.
	Going forward, will rely on C++11 compatibility

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Mar 5 13:45:27 2020 -0500
	Particle Gun:
	Removed offending (and unnecessary?) header
	Removed unneeded helpers.
	Removed files that shouldn't be ignored
	Removed ClassDef. Need to reethink if dictionary is needed. Changed includes, renamed main function, indentation

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Thu Mar 5 11:46:59 2020 -0500

    Simple test for reading eA files.
    Shortened test file to 5MB (1000 events)
    Linking tests to script/ directory

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Fri Feb 21 14:38:56 2020 -0500
	Particle gun:
	Cap theta at values with finite eta
	Added some quick histos.
	Fixed bug in particle energy
	Fixed minor issues.
	Added explicit 'override' to suppress warning in C++11

Author: Dmitry Romanov <romanovda@gmail.com>
Date:   Tue Feb 4 15:34:31 2020 -0500
	Added particle gun

Author: kkauder <kkauder@gmail.com>
Date:   Wed Feb 12 18:24:11 2020 +0000
	Replaced silent cutoff of x, y with a suppressable warning

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Mon Feb 10 14:05:03 2020 -0500
    Added doxygen html documentation for convenience

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Mon Dec 9 16:56:59 2019 -0500
    Updated root cmake module to address issue #8

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Oct 23 14:19:46 2019 -0400
    Improved dictionary generation.
    Improved text and formatting in README

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Oct 2 12:49:55 2019 -0400
    Example BeAST implementation. NOT guaranteed to be correct.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jul 9 16:29:49 2019 -0400
    pythia-related fixes

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jul 9 16:20:00 2019 -0400
    Bugfixes from test on a Mac

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Jul 9 15:42:57 2019 -0400
    Switched to root6 based FindROOT module.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed May 8 11:21:06 2019 -0400
    Added optional pythia dictionaries to installation list.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Mon May 6 17:08:08 2019 -0400
    Updated contact information

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Sat May 4 09:12:07 2019 -0400
    Removed svn structure and autoconf-related things.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Sat May 4 09:08:03 2019 -0400
    Updated installation instructions

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed May 1 17:44:38 2019 -0400
    Fixed unnecessary linkage with libPythia6

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Apr 17 11:47:06 2019 -0400
    Another install bug fixed.
    Install bug fixed.

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Apr 17 11:03:43 2019 -0400
    Changed completely to CMake, moved autoconf-related files to backup
	directory

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Apr 17 11:02:53 2019 -0400
    Fixed dictionary-related bug where streamers were created for the wrong members

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Wed Apr 17 11:01:39 2019 -0400
    Added dictionary files to installation

Author: Chris Pinkenburg <pinkenburg@bnl.gov>
Date:   Mon Apr 8 11:41:33 2019 -0400
    add -inlineInputHeader to rootcint flags for root6

Author: Alexander Kiselev <ayk@bnl.gov>
Date:   Fri Apr 5 16:36:00 2019 +0200
    A quick hack to CMakeLists.txt for ROOT6

Author: Chris Pinkenburg <pinkenburg@bnl.gov>
Date:   Thu Mar 14 12:15:56 2019 -0400
    Use c++11 compiler flag for root6

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Oct 2 17:01:34 2018 -0400
    A more structured attempt based on un-nesting the Forester::Status
	class. This works but clashes with TTrees generated with older
	versions. Leaving it here, but it breaks backward compatibility

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Oct 2 16:57:45 2018 -0400
    Shifted Forester::Status implementation into the cxx file
    and made this nested class public. This is to fix problems with
    linking and dictionary generation in ROOT6.

commit 5fb2c8083fbcf3ba69ecf99c12cfab734b8febc6
Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Oct 2 16:56:51 2018 -0400
    Adapted to C++11 and automatic ROOT(6) support. Needs autoconf-archive
	and may not immediately work with ROOT5!

Author: Kolja Kauder <kkauder@gmail.com>
Date:   Tue Oct 2 16:56:17 2018 -0400
    Adapted to C++11 and automatic ROOT(6) support. Needs autoconf-archive and may not immediately work with ROOT5!

Author: Alexander Kiselev <ayk@bnl.gov>
Date:   Thu May 11 16:02:18 2017 +0000
      //AYK: BeAGLE-related changes from Liang are incorporated



	
	2014-03-24 15:34  tpb@RHIC.BNL.GOV

	* Makefile.am: Fix broken build from distribution
	  
	  Reverts the effect of commit 253, and partially 245. Removing
	  Dict files from the list of sources prevents the dictionaries
		being built. Retain the .cxx Dict files in the source list, but
		the .h files are removed as they are not needed.
	  
	  Instead add a dist-hook to Makefile.am to remove Dict files
	  before distribution is created.

2014-03-22 22:25  tpb@RHIC.BNL.GOV

	* Makefile.am: Remove Dict files from list of sources
	  
	  Further tests showed these weren't needed to enable make
		distcheck, but including them caused them to be included in the
		generated distribution, which is not desirable.

2014-03-22 15:20  tpb@RHIC.BNL.GOV

	* src/erhic/ParticleMC.cxx: Set missing particle properties from 4
	  vector

2014-03-22 15:20  tpb@RHIC.BNL.GOV

	* src/smear/Acceptance.cxx: Fix loophole in Acceptance
	  
	  Particles with a species cut didn't have that cut applied if they
	  had no Zones defined. Now, species selection is checked before
		checking individual Zones.

2014-03-22 15:20  tpb@RHIC.BNL.GOV

	* include/eicsmear/smear/Bremsstrahlung.h: Make most Bremsstrahlung
	  methods protected

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* cint/smearLinkDef.h, include/eicsmear/smear/Bremsstrahlung.h:
	  Make Bremsstrahlung pointer members transient
	  
	  As they change event-to-event it does not make sense to write
		them.
	  
	  Add pragma definition to LinkDef for auto_ptr<ParticleMC> to avoid
	  warnings in ROOT when using Bremsstrahlung

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* include/eicsmear/smear/Bremsstrahlung.h,
	  src/smear/Bremsstrahlung.cxx: Fix compiler warnings due to
	  Bremsstrahlung
	  
	  Change signature of some virtual methods that was causing them to
	  be hidden.
	  
	  Explicitly define a copy constructor with const argument, as the
	  compiler-provided version used a non-const argument.

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/Forester.h, src/erhic/Forester.cxx:
	  Overload Forester::Print
	  
	  Previous implementation hid TObject::Print.
	  Add overloaded version matching TObject::Print arguments. Default
	  behaviour remains unchanged (i.e. output goes to cout)

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/EventDis.h: Use struct in Kinematics
	  forward declaration
	  
	  Using class forward declaration but struct in class declaration
	  causes compiler warning

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* Makefile.am: Enable make distcheck
	  
	  There were a few shortcomings in Makefile.am that prevented make
	  distcheck from succeeding:
	  
	  - eicsmear/smear/EventFactory.h was missing from smear_headers
	  - LinkDef files for rootcint were not included in the lists of
	    headers
	  - The .h files generated by rootcint were missing from the list
	    of sources
	  
	  With these changes, running make distclean now passes all checks.
	  
	  CMake-related files are also added to the list of files to be
	  included in the distribution, so a tar distribution generated by
		autotools can still be built with CMake

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* configure.ac: Remove duplicate init statement
	  
	  Two calls to AM_INIT_AUTOMAKE with different arguments caused
	  problems for more recent versions of Autotools

2014-03-22 15:19  tpb@RHIC.BNL.GOV

	* scripts/ePHENIXDetector.cpp: Add example smearing script for
	  ePHENIX detector

2014-03-22 15:18  tpb@RHIC.BNL.GOV

	* scripts/eSTARDetector.cpp: Add example smearing script for eSTAR
	  detector

2014-03-22 15:18  tpb@RHIC.BNL.GOV

	* scripts/STARDetector.cpp, scripts/ZEUSDetector.cpp: Add comments
	  with file info to smearing scripts
	  
	  Author, date and copyright in Doxygen format for STAR and ZEUS
	  smearing example scripts

2014-02-13 17:22  tpb@RHIC.BNL.GOV

	* src/functions.cxx: Protect against crash due to unknown PDG code
	  in EventToDot

2014-02-06 10:03  tpb@RHIC.BNL.GOV

	* src/smear/SmearTree.cxx: Delete event builder after use in
	  SmearTree (failure to delete could cause obscure crash in user
	  code)

2014-01-10 19:08  tpb@RHIC.BNL.GOV

	* scripts/STARDetector.cpp, scripts/ZEUSDetector.cpp: Add example
	  detector parameterisation scripts for STAR and ZEUS

2013-12-16 16:47  tpb@RHIC.BNL.GOV

	* src/erhic/Kinematics.cxx: Modify kinematic calculations to remove
	  small differences between calculated nu and true nu

2013-09-20 20:39  tpb@RHIC.BNL.GOV

	* eicpy/cpplint.py: Add cpplint script for checking compliance with
	  coding conventions

2013-09-20 20:35  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/Forester.h: Revert use of unsupported
	  ctime_r to ctime

2013-09-20 20:28  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/EventFactory.h,
	  include/eicsmear/erhic/EventGmcTrans.h,
	  include/eicsmear/erhic/EventMC.h,
	  include/eicsmear/erhic/EventPythia.h,
	  include/eicsmear/erhic/Forester.h,
	  include/eicsmear/erhic/Kinematics.h,
	  include/eicsmear/erhic/ParticleMC.h,
	  include/eicsmear/erhic/Pythia6EventBuilder.h,
	  include/eicsmear/hadronic/ParticleMC.h,
	  include/eicsmear/hadronic/Pythia6EventFactory.h,
	  include/eicsmear/smear/Acceptance.h,
	  include/eicsmear/smear/FormulaString.h,
	  include/eicsmear/smear/ParticleID.h, src/erhic/EventMC.cxx,
	  src/erhic/EventPythia.cxx, src/erhic/ParticleMC.cxx,
	  src/erhic/Pythia6EventBuilder.cxx, src/hadronic/EventMC.cxx,
	  src/hadronic/Pythia6EventFactory.cxx,
	  src/smear/Bremsstrahlung.cxx, src/smear/Device.cxx,
	  src/smear/EventSmear.cxx: Make style edits that could
	  theoretically affect functionality.
	  
	  This includes making single-argument constructors explicit
	  and removing uses of C-style casts and dynamic_cast.

2013-09-20 20:03  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/BeamParticles.h,
	  include/eicsmear/erhic/DisKinematics.h,
	  include/eicsmear/erhic/EventBase.h,
	  include/eicsmear/erhic/EventDis.h,
	  include/eicsmear/erhic/EventDjangoh.h,
	  include/eicsmear/erhic/EventDpmjet.h,
	  include/eicsmear/erhic/EventFactory.h,
	  include/eicsmear/erhic/EventGmcTrans.h,
	  include/eicsmear/erhic/EventMC.h,
	  include/eicsmear/erhic/EventMCFilterABC.h,
	  include/eicsmear/erhic/EventMilou.h,
	  include/eicsmear/erhic/EventPepsi.h,
	  include/eicsmear/erhic/EventPythia.h,
	  include/eicsmear/erhic/EventRapgap.h,
	  include/eicsmear/erhic/File.h, include/eicsmear/erhic/Forester.h,
	  include/eicsmear/erhic/Kinematics.h,
	  include/eicsmear/erhic/Particle.h,
	  include/eicsmear/erhic/ParticleIdentifier.h,
	  include/eicsmear/erhic/ParticleMC.h,
	  include/eicsmear/erhic/Pid.h, include/eicsmear/erhic/Pythia6.h,
	  include/eicsmear/erhic/Pythia6EventBuilder.h,
	  include/eicsmear/erhic/Pythia6ParticleBuilder.h,
	  include/eicsmear/erhic/VirtualEvent.h,
	  include/eicsmear/erhic/VirtualParticle.h,
	  include/eicsmear/functions.h,
	  include/eicsmear/hadronic/EventMC.h,
	  include/eicsmear/hadronic/EventPythia.h,
	  include/eicsmear/hadronic/EventSmear.h,
	  include/eicsmear/hadronic/ParticleMC.h,
	  include/eicsmear/hadronic/Pythia6EventFactory.h,
	  include/eicsmear/smear/Acceptance.h,
	  include/eicsmear/smear/Bremsstrahlung.h,
	  include/eicsmear/smear/Detector.h,
	  include/eicsmear/smear/Device.h,
	  include/eicsmear/smear/Distributor.h,
	  include/eicsmear/smear/EventDisFactory.h,
	  include/eicsmear/smear/EventFactory.h,
	  include/eicsmear/smear/EventS.h,
	  include/eicsmear/smear/EventSmear.h,
	  include/eicsmear/smear/FormulaString.h,
	  include/eicsmear/smear/ParticleID.h,
	  include/eicsmear/smear/ParticleMCS.h,
	  include/eicsmear/smear/PerfectID.h,
	  include/eicsmear/smear/PlanarTracker.h,
	  include/eicsmear/smear/RadialTracker.h,
	  include/eicsmear/smear/Smear.h, include/eicsmear/smear/Smearer.h,
	  include/eicsmear/smear/Tracker.h,
	  include/eicsmear/smear/functions.h, src/erhic/BeamParticles.cxx,
	  src/erhic/BuildTree.cxx, src/erhic/EventDis.cxx,
	  src/erhic/EventDjangoh.cxx, src/erhic/EventDpmjet.cxx,
	  src/erhic/EventFactory.cxx, src/erhic/EventGmcTrans.cxx,
	  src/erhic/EventMC.cxx, src/erhic/EventMilou.cxx,
	  src/erhic/EventPepsi.cxx, src/erhic/EventPythia.cxx,
	  src/erhic/EventRapgap.cxx, src/erhic/File.cxx,
	  src/erhic/Forester.cxx, src/erhic/Kinematics.cxx,
	  src/erhic/ParticleIdentifier.cxx, src/erhic/ParticleMC.cxx,
	  src/erhic/Pid.cxx, src/erhic/Pythia6.cxx,
	  src/erhic/Pythia6EventBuilder.cxx,
	  src/erhic/Pythia6ParticleBuilder.cxx, src/functions.cxx,
	  src/hadronic/EventMC.cxx, src/hadronic/EventPythia.cxx,
	  src/hadronic/EventSmear.cxx, src/hadronic/ParticleMC.cxx,
	  src/hadronic/Pythia6EventFactory.cxx, src/smear/Acceptance.cxx,
	  src/smear/Bremsstrahlung.cxx, src/smear/Detector.cxx,
	  src/smear/Device.cxx, src/smear/Distributor.cxx,
	  src/smear/EventDisFactory.cxx, src/smear/EventSmear.cxx,
	  src/smear/FormulaString.cxx, src/smear/ParticleID.cxx,
	  src/smear/ParticleMCS.cxx, src/smear/PerfectID.cxx,
	  src/smear/PlanarTracker.cxx, src/smear/RadialTracker.cxx,
	  src/smear/Smear.cxx, src/smear/SmearTree.cxx,
	  src/smear/Tracker.cxx: Make cosmetic changes to comply with style
	  guide.
	  
	  Style is now based on Google style guidelines, with a few
	  differences.
	  Changes are only cosmetic ones, nothing that potentially affects
	  functionality like getting rid of dynamic cast.

2013-09-10 16:12  tpb@RHIC.BNL.GOV

	* CMakeLists.txt, cmake, cmake/Modules,
	  cmake/Modules/FindROOT.cmake: Add cmake build support

2013-09-06 21:04  tpb@RHIC.BNL.GOV

	* eicpy/verify.py: Add verification script to build trees and
	  generate standard plots

2013-09-05 16:53  tpb@RHIC.BNL.GOV

	* eicpy/build.py: Add build script to eicpy

2013-09-04 21:48  tpb@RHIC.BNL.GOV

	* src/erhic/ParticleMC.cxx: Fix for particle event-dependent
	  kinematic calculations for lepto-like generators

2013-09-04 20:36  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/ParticleMC.h, src/erhic/ParticleMC.cxx:
	  Fix Get4VectorInHadronBosonFrame implementation

2013-08-28 19:35  tpb@RHIC.BNL.GOV

	* src/erhic/EventFactory.cxx, src/erhic/Forester.cxx: Refine error
	  handling when processing text file

2013-08-17 22:02  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/EventPepsi.h: Fix error in PEPSI/LEPTO
	  kinematic calculations

2013-08-13 18:56  tpb@RHIC.BNL.GOV

	* src/erhic/File.cxx: Fix issue with DJANGOH log file reader not
	  always finding the cross section

2013-04-23 19:36  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/VirtualParticle.h,
	  include/eicsmear/hadronic/ParticleMC.h,
	  include/eicsmear/smear/ParticleMCS.h: Make SetVertex a virtual
	  method of VirtualParticle and implement in all inheriting classes

2013-04-19 19:21  tpb@RHIC.BNL.GOV

	* include/eicsmear/erhic/EventFactory.h,
	  include/eicsmear/erhic/ParticleMC.h,
	  include/eicsmear/erhic/VirtualParticle.h,
	  include/eicsmear/hadronic/ParticleMC.h,
	  include/eicsmear/smear/EventDisFactory.h,
	  include/eicsmear/smear/ParticleMCS.h,
	  src/hadronic/ParticleMC.cxx: Modify to support operation with
	  eicroot detector simulation

2013-04-19 19:20  tpb@RHIC.BNL.GOV

	* ChangeLog, NEWS: Add summary of changes between version to NEWS
	  and add empty ChangeLog

Changes for 1.0.2:

* Monte Carlo events now store tracks in a TClonesArray instead of vector.
  This change requires old trees to be reproduced.
* No longer attempts to build PYTHIA-dependent components if a PYTHIA library
  is not provided to configure.
* Bug fixes for some compilation and stability issues.
* Improvements to kinematic calculations, including support for
  charged-current events in Jacquet-Blondel method.
* Modification to intrinsic resolution function used in generic tracking
  formula.
* Support for polarised Djangoh events.
* Additional checks on integrity of ASCII input.
* Other minor code cleanups and textual improvements.

Changes for 1.0.1:

* Support for gmc_trans events.
* Support for DPMJet events.
* Support for hadronic events (p + p etc.).
* Added PerfectID class to smearing code allowing exact duplication of
  particle ID.
* Added external utility to convert tppmc output to eic-smear format
  compatible with smearing.
* Added specialised PlanerTracker and RadialTracker classes implementing
  generic momentum resolution functions.
* Modifications to hadronic kinematic calculations.
* Improvements to configure/make, including corrections to configure options.
* Significant code restructuring, especially in smearing portions, including
  file structure, class names and additional methods.
* Other bug fixes, stability improvements and code cleanup.

Changes for 1.0.0:

* Initial release.
